@using UFei.Storage.Entity.SystemSet;
@using UFei.Storage.Entity.Permission
@model UFei.Storage.Entity.Permission.T_User
@{ Layout = "~/Views/Shared/_LayoutForm.cshtml";
	var type = Request.Params["type"];// add添加 edit编辑
	var url = type == "add" ? "/System/User/Register" : "/System/User/AdminSave";
	bool IsAdmin = ViewBag.IsAdmin;
	T_SysConfig config = ViewBag.SysConfig;
	List<T_Role> roleList = ViewBag.RoleList;
	List<SelectListItem> selectListItem = new List<SelectListItem>() {
new SelectListItem() { Value = "1", Text = "正常" },
new SelectListItem() { Value = "2", Text = "锁定" }};
	List<SelectListItem> isCommentSelectListItem = new List<SelectListItem>() {
new SelectListItem() { Value = "False", Text = "关闭" },
new SelectListItem() { Value = "True", Text = "开启" }};}
<form class="layui-form layui-form-pane ok-form" lay-filter="formSave">
	@Html.HiddenFor(x => x.Id, Model.Id)
	<div class="layui-form-item">
		<div class="pl-form-line">
			@Html.LabelFor(m => m.LoginAccount, new { @class = "layui-form-label xrequired" })
			<div class="pl-form-input-block">
				@Html.TextBoxFor(m => m.LoginAccount, new { @class = "layui-input", @placeholder = "请输入" + Html.DisplayNameFor(m => m.LoginAccount), @maxlength = "20" })
				@Html.ValidationMessageFor(m => m.LoginAccount)
			</div>
		</div>
		@if (Model.Id == 0 || (Model.Id > 0 && IsAdmin))
		{
			<div class="pl-form-line">
				@Html.LabelFor(m => m.LoginPassword, new { @class = "layui-form-label xrequired" })
				<div class="pl-form-input-block">
					@if (Model.Id == 0)
					{
						<input class="layui-input" name="InitPassword" value="@config.InitUserPwd" autocomplete="off" readonly="">
					}
					else if (IsAdmin)
					{
						<input class="layui-input" type="password" name="LoginPassword" placeholder="不修改密码请勿填写" autocomplete="off">
					}
				</div>
			</div>
		}
		<div class="pl-form-line">
			@Html.LabelFor(m => m.RealName, new { @class = "layui-form-label xrequired" })
			<div class="pl-form-input-block">
				@Html.TextBoxFor(m => m.RealName, new { @class = "layui-input", @placeholder = "请输入" + Html.DisplayNameFor(m => m.RealName), @maxlength = "20" })
				@Html.ValidationMessageFor(m => m.RealName)
			</div>
		</div>
		<div class="pl-form-line">
			@Html.LabelFor(m => m.Phone, new { @class = "layui-form-label xrequired" })
			<div class="pl-form-input-block">
				@Html.TextBoxFor(m => m.Phone, new { @class = "layui-input", @placeholder = "请输入" + Html.DisplayNameFor(m => m.Phone), @maxlength = "11" })
				@Html.ValidationMessageFor(m => m.Phone)
			</div>
		</div>
		@if (Model.Id > 0)
		{
			if (!Model.LoginAccount.Equals("admin"))
			{
				<div class="pl-form-line">
					<label class="layui-form-label xrequired">用户角色</label>
					<div class="pl-tableForm-input-block">
						<select name="RoleId" lay-search="">
							<option value="">请选择角色</option>
							@foreach (var item in roleList)
							{
								if (Model.Id > 0 && Model.RoleId == item.Id)
								{
									<option value="@item.Id" selected>@item.RoleName</option>
								}
								else
								{
									<option value="@item.Id">@item.RoleName</option>
								}
							}
						</select>
					</div>
				</div>
			}
			else
			{
				@Html.HiddenFor(x => x.RoleId, Model.RoleId)
			}
			<div class="pl-form-line">
				@Html.LabelFor(m => m.UserStatus, new { @class = "layui-form-label xrequired" })
				<div class="pl-form-input-block">
					@Html.DropDownListFor(m => m.UserStatus, selectListItem, new { @lay_search = "" })
				</div>
			</div>
		}
		@if (Model.Id == 0 || (Model.Id > 0 && IsAdmin))
		{
			<div class="pl-form-line">
				@Html.LabelFor(m => m.IsComment, new { @class = "layui-form-label xrequired" })
				<div class="pl-form-input-block">
					@Html.DropDownListFor(m => m.IsComment, isCommentSelectListItem, new { @lay_search = "" })
				</div>
			</div>
		}
		<div class="pl-form-line">
			@Html.LabelFor(m => m.DepartmentName, new { @class = "layui-form-label xrequired" })
			<div class="pl-form-input-block">
				@Html.TextBoxFor(m => m.DepartmentName, new { @class = "layui-input", @placeholder = "请输入" + Html.DisplayNameFor(m => m.DepartmentName), @maxlength = "20" })
				@Html.ValidationMessageFor(m => m.DepartmentName)
			</div>
		</div>
	</div>
	<div class="layui-form-item">
		<div class="pl-item-input-block">
			@if (IsAdmin)
			{
				<button class="layui-btn" lay-submit lay-filter="save">保存</button>
			}
			<button type="button" class="layui-btn layui-btn-primary" id="close">取消</button>
		</div>
	</div>
</form>
<script type="text/javascript">
	layui.use(["form", "okLayer", "okUtils"], function () {
		let form = layui.form;
		let okLayer = layui.okLayer;
		let okUtils = layui.okUtils;

		form.on("submit(save)", function (data) {
			okUtils.ajax("@url", "post", data.field, true).done(function (res) {
				okLayer.greenTickMsg(res.Msg, function () {
					CloseWin();
				});
			}).fail(function (error) {
				console.log(error);
			});
			return false;
		});
	});
</script>