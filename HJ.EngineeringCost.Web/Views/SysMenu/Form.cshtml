@model HJ.EngineeringCost.Web.Models.SysMenu
@{
    Layout = "~/Views/Shared/_LayoutForm.cshtml";
    var url = Model?.Id > 0 ? "/api/SysMenu/Update" : "/api/SysMenu/Create";
    var isEdit = Model?.Id > 0;
}

<form class="layui-form layui-form-pane ok-form" lay-filter="formSave">
    <input type="hidden" name="Id" value="@Model?.Id" />
    <input type="hidden" name="ParentId" value="@Model?.ParentId ?? 0" />

    <div class="layui-form-item">
        <div class="pl-form-line">
            <label class="layui-form-label xrequired">菜单名称</label>
            <div class="pl-form-input-block">
                <input name="MenuName" value="@Model?.MenuName" class="layui-input" type="text"
                       placeholder="请输入菜单名称" autocomplete="off" lay-verify="required" />
            </div>
        </div>
    </div>

    <div class="layui-form-item">
        <div class="pl-form-line">
            <label class="layui-form-label">菜单URL</label>
            <div class="pl-form-input-block">
                <input name="Url" value="@Model?.Url" class="layui-input" type="text"
                       placeholder="如：/api/Home/Index" autocomplete="off" />
            </div>
        </div>
    </div>

    <div class="layui-form-item">
        <div class="pl-form-line">
            <label class="layui-form-label">菜单图标</label>
            <div class="pl-form-input-block">
                <input name="Icon" value="@Model?.Icon" class="layui-input" type="text"
                       placeholder="Layui图标类名，如：layui-icon-home" autocomplete="off" />
                <div class="layui-form-mid layui-word-aux">图标参考：<a href="https://layui.dev/docs/2/icon/" target="_blank">Layui图标库</a></div>
            </div>
        </div>
    </div>

    <div class="layui-form-item">
        <div class="pl-form-line">
            <label class="layui-form-label">父级菜单</label>
            <div class="pl-form-input-block">
                <select name="ParentId" lay-verify="required">
                    <option value="0">顶级菜单</option>
                    @* 这里需要通过后端获取所有菜单列表并生成选项 *@
                </select>
            </div>
        </div>
    </div>

    <div class="layui-form-item">
        <div class="pl-form-line">
            <label class="layui-form-label xrequired">排序号</label>
            <div class="pl-form-input-block">
                <input name="Sort" value="@(Model?.Sort ?? 0)" class="layui-input" type="number"
                       placeholder="数字越小越靠前" autocomplete="off" lay-verify="required" />
            </div>
        </div>
    </div>

    <div class="layui-form-item">
        <div class="pl-form-line">
            <label class="layui-form-label">是否显示</label>
            <div class="pl-form-input-block">
                <input type="radio" name="IsShow" value="true" title="是"
                @(Model == null || Model.IsShow ? "checked" : "")>
                <input type="radio" name="IsShow" value="false" title="否"
                @(Model != null && !Model.IsShow ? "checked" : "")>
            </div>
        </div>
    </div>

    <div class="fixed-buttons">
        <button class="layui-btn layui-btn-sm layui-btn-normal" lay-submit lay-filter="save">保存</button>
        <button type="button" class="layui-btn layui-btn-sm layui-btn-primary" id="close">取消</button>
    </div>
</form>

<script type="text/javascript">
    layui.use(["form", "okLayer", "okUtils"], function () {
        let form = layui.form;
        let okLayer = layui.okLayer;
        let okUtils = layui.okUtils;

        // 加载父级菜单列表
        okUtils.ajax("/api/SysMenu/GetTreeList", "get", {}, false)
            .done(function (res) {
                if (res.Code === 0 && res.Data && res.Data.length > 0) {
                    let parentId = @(Model?.ParentId ?? 0);
                    let html = '<option value="0">顶级菜单</option>';
                    // 递归生成树形下拉选项
                    function buildMenuOptions(menus, level = 0) {
                        menus.forEach(menu => {
                            let prefix = level > 0 ? '├' + '─'.repeat(level) : '';
                            html += `<option value="${menu.id}" ${menu.id === parentId ? 'selected' : ''}>${prefix}${menu.menuName}</option>`;
                            if (menu.children && menu.children.length > 0) {
                                buildMenuOptions(menu.children, level + 1);
                            }
                        });
                    }
                    buildMenuOptions(res.Data);
                    $("select[name='ParentId']").html(html);
                    form.render("select");
                }
            });

        // 表单提交
        form.on("submit(save)", function (data) {
            const requestData = {
                data: [data.field]
            };

            okUtils.ajax("@url", "post", requestData, true)
                .done(function (res) {
                    okLayer.greenTickMsg(res.message, function () {
                        parent.layer.closeAll();
                        parent.layui.table.reload("tableId");
                    });
                })
                .fail(function (error) {
                    okLayer.redSighMsg(error.responseJSON.message || "操作失败");
                });
            return false;
        });

        // 取消按钮
        $("#close").click(function () {
            parent.layer.closeAll();
        });
    });
</script>