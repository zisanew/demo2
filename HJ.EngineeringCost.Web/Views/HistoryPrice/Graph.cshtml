@{
    Layout = "~/Views/Shared/_LayoutForm.cshtml";
    var materialId = ViewBag.MaterialId;
}
<div class="layui-row">
    <div class="layui-col-md12">
        <h5>材料单价</h5>
        <div id="priceChart" style="width: 100%; height: 300px;"></div>
    </div>
</div>
<div class="layui-row">
    <div class="layui-col-md12">
        <h5>工资单价</h5>
        <div id="wagesPriceChart" style="width: 100%; height: 300px;"></div>
    </div>
</div>
<div class="fixed-buttons">
    <button type="button" class="layui-btn layui-btn-sm layui-btn-primary" id="close">关闭</button>
</div>
<script src="https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js"></script>
<script type="text/javascript">
    layui.use(["okUtils"], function () {
        let okUtils = layui.okUtils;

        const materialChart = echarts.init(document.getElementById('priceChart'));
        const wagesChart = echarts.init(document.getElementById('wagesPriceChart'));

        okUtils.ajax(`/api/HistoryPrice/GetHistoryPriceTrends?id=${@materialId}`, "get", null, true)
            .done(function (res) {
                if (res.data) {
                    renderPriceChart(res.data, materialChart);
                    renderWagesPriceChart(res.data, wagesChart);
                }
            })
            .fail(function (error) {
                console.error("获取历史价格失败：", error);
            });

        function renderPriceChart(material, chart) {
            const materialPrices = material.historyPriceList
                .map(item => ({
                    date: formatDate(item.createTime),
                    price: item.price
                }))
                .sort((a, b) => new Date(a.date) - new Date(b.date));

            const option = {
                tooltip: {
                    trigger: 'axis'
                },
                label:{
                    show: true,
                    position: 'top',
                    color: '#91CC75'
                },
                xAxis: {
                    type: 'category',
                    data: materialPrices.map(item => item.date),
                    axisLabel: {
                        rotate: 30,
                        interval: 0
                    }
                },
                yAxis: {
                    type: 'value',
                    name: '单价 (元)',
                    min: 0
                },
                series: [{
                    name: '材料单价',
                    type: 'line',
                    data: materialPrices.map(item => item.price),
                    smooth: true,
                    itemStyle: { color: '#91CC75' },
                    lineStyle: { width: 2 }
                }]
            };
            chart.setOption(option);
        }

        function renderWagesPriceChart(material, chart) {
            const wagesPrices = material.historyWagesPriceList
                .map(item => ({
                    date: formatDate(item.createTime),
                    price: item.wagesPrice
                }))
                .sort((a, b) => new Date(a.date) - new Date(b.date));

            const option = {
                tooltip: {
                    trigger: 'axis'
                },
                label:{
                    show: true,
                    position: 'top',
                    color: '#91CC75'
                },
                xAxis: {
                    type: 'category',
                    data: wagesPrices.map(item => item.date),
                    axisLabel: {
                        rotate: 30,
                        interval: 0
                    }
                },
                yAxis: {
                    type: 'value',
                    name: '单价 (元)',
                    min: 0
                },
                series: [{
                    name: '工资单价',
                    type: 'line',
                    data: wagesPrices.map(item => item.price),
                    smooth: true,
                    itemStyle: { color: '#91CC75' },
                    lineStyle: { width: 2 }
                }]
            };
            chart.setOption(option);
        }

        function formatDate(dateStr) {
            const date = new Date(dateStr);
            return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;
        }

        // 图表自适应
        window.addEventListener('resize', function () {
            materialChart.resize();
            wagesChart.resize();
        });
    });
</script>
